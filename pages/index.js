import Head from 'next/head'
import { HTML5Backend } from 'react-dnd-html5-backend'
import { DndProvider } from 'react-dnd'
import styles from '../styles/Home.module.css'
import { Artboard } from './components/Artboard'
import { Box } from './components/Box'
import React, { useEffect, useLayoutEffect, useState } from 'react'
import { ToolbarItem } from './components/ToolbarItem'
import Image from 'next/image'
import Canvas from './components/Canvas'
import Sidebar from './components/Sidebar'
import Navbar from './components/Navbar'

const Container = () => {
  const [pages, setPages] = useState([{ id: 1, backgroundColor: '#fff' }])
  const [selectedPageId, setSelectedPageId] = useState(null)

  const focusedPage = (selectedPageId === null) ? pages[0] : pages.filter(page => page.id === selectedPageId)
  
  const onPageChange = (property, value) => {
    const focusedId = focusedPage.id

    const newPages = pages.map(page => {
      if (page.id === focusedId) {
        return {...page, [property]: value}
      }

      return page
    })

    setPages(newPages)
  }

  return (
    <div className="flex h-screen">
      <DndProvider backend={HTML5Backend}>
        <Sidebar focusedPage={focusedPage} onPageChange={onPageChange} />
        <main className="p-7 h-screen flex-1 overflow-y-auto">
          <Navbar onAddPage={() => {
            const newPage = { id: pages.length + 1, backgroundColor: '#fff' }
            setPages(currentPages => [...currentPages, newPage])
          }} />
          <Canvas pages={pages} selectedPageId={selectedPageId} onSelectPage={(pageId) => {
            setSelectedPageId(pageId)
          }} onDeselectPage={() => {
            setSelectedPageId(null)
          }} />
        </main>
      </DndProvider>
    </div>
  )
}

const MemoizedContainer = React.memo(Container)

export default function Home() {

  return (
    <div className={styles.container} data-theme="black">
      <Head>
        <title>Create Next App</title>
        <meta name="description" content="Generated by create next app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <main>
        <MemoizedContainer />
      </main>
    </div>
  )
}
