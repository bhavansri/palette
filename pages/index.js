import Head from 'next/head'
import styles from '../styles/Home.module.css'
import React, { useEffect, useState } from 'react'
import Sidebar from './components/Sidebar'
import Navbar from './components/Navbar'
import Page from './components/Page'
import { ItemTypes } from './utils/types'

const Container = () => {
  const [page, setPage] = useState({ backgroundColor: '#fff' })
  const [blocks, setBlocks] = useState([])
  const [selectedBlock, setSelectedBlock] = useState(null)

  const onPageChange = (property, value) => {
    setPage(page => ({...page, [property]: value}))
  }

  const addImageHandler = (url) => {
    const imageBlock = {
      type: ItemTypes.IMAGE,
      id: blocks.length + 1,
      x: 20,
      y: 80,
      width: 170,
      height: 200,
      url: url
    }
    
    setBlocks(prevBlocks => [...prevBlocks, imageBlock])
    setSelectedBlock(imageBlock)
  }

  const createNewTextBlock = () => {
    const textBlock = {
      type: ItemTypes.TEXT,
      id: blocks.length + 1,
      x: 20,
      y: 80,
      height: 30,
      text: "Text Placeholder",
      font: 'Cinzel',
      color: '#000000',
      size: 'md',
      alignment: 'left'
    }

    setBlocks(prevBlocks => [...prevBlocks, textBlock])
    setSelectedBlock(textBlock)
  }

  const updateBlock = (blockProps) => {
    setBlocks(prevBlocks => {
      const newBlocks = prevBlocks.map(prevBlock => {
        if (prevBlock.id === blockProps.id) {
          return Object.assign(prevBlock, blockProps)
        }

        return prevBlock
      })

      return newBlocks
    })
  }

  useEffect(() => {
    console.log(blocks)
  })
  
  return (
    <div className="flex h-screen">
      <Sidebar
        page={page}
        selectedBlock={selectedBlock}
        setSelectedBlock={updateBlock}
        onPageChange={onPageChange}
        onImageSelect={addImageHandler}
        createNewTextBlock={createNewTextBlock}
        />
        <main className="p-7 h-screen flex-1 overflow-y-auto">
          <Navbar />
          <div className="min-h-full bg-stone-300 flex flex-col items-center justify-around py-5">
          <Page
            backgroundColor={page.backgroundColor}
            blocks={blocks}
            setBlock={updateBlock}
            blockSelected={(selectedBlock) => {
              setSelectedBlock(selectedBlock)
            }}
          />
          </div>
        </main>
    </div>
  )
}

const MemoizedContainer = React.memo(Container)

export default function Home() {

  return (
    <div className={styles.container} data-theme="black">
      <Head>
        <title>Create Next App</title>
        <meta name="description" content="Generated by create next app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <main>
        <MemoizedContainer />
      </main>
    </div>
  )
}
